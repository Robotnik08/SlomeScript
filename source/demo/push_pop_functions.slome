MAKE ARRAY range 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18;
DO "pushBack" :range,19: TO range;
DO "pushBack" :range,20: TO range;
DO "popBack" :range: TO range;
DO "logArrayFancy" :range,"\c\s":;
MAKE NUMBER num 0;
DO GET num TYPE TO num;
DO SAY num;
END 0;
DEFINE FUNC VOID logArrayFancy :arr,str:;
    MAKE NUMBER i 0;
    MAKE NUMBER size 0;
    DO GET range SIZE TO size;
    DO SAY "[";
    SKIP LOCATION loop;
        DO SET i :i+1:;
        DO SAY arr#i,str;
    SKIP TO "loop" WHEN @i<:size-2:@;
    DO SAY arr#:i+1:,"]\n";
    DO RETURN;
ENDFUNC;
DEFINE FUNC NUMBER pp ::;
    DO RETURN :69+69-69:;
ENDFUNC;
DEFINE FUNC ARRAY pushBack :arr,push:;
    MAKE NUMBER size 0;
    DO GET arr SIZE TO size;
    DO SET arr#size push;
    DO RETURN arr;
ENDFUNC;
DEFINE FUNC ARRAY popBack :arr:;
    MAKE NUMBER size 0;
    MAKE NUMBER i 0;
    MAKE ARRAY response;
    DO GET arr SIZE TO size;
    SKIP LOCATION loop;
        DO SET response#i arr#i;
        DO SET i :i+1:;
    SKIP TO "loop" WHEN @i<:size-1:@;
    DO RETURN response;
ENDFUNC;