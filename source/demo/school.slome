DO SAY "8.1\n";
>> Making variables;
MAKE NUMBER myAge 17;
MAKE NUMBER myBirthyear 2005;
MAKE NUMBER result 0;
DO SET result :myAge*1:;
DO SAY result,"\n";
DO SET result :myAge*myBirthyear:;
DO SAY result,"\n";
DO SET result :myBirthyear/myAge:;
DO SAY result,"\n";
DO SET result :myBirthyear/myAge:;
DO SAY result,"\n";
MAKE NUMBER resultone 0;
DO SET resultone :myBirthyear/myAge:;
MAKE NUMBER resulttwo 0;
DO SET resulttwo :myAge/myBirthyear:;
DO "max" :resultone,resulttwo: TO result;
DO SET result :myBirthyear/myAge:;
DO SAY result,"\n";
DO SET result :myBirthyear/myAge:;
DO SAY result,"\n";
DO SET result :2.5*2.5:;
DO SAY result,"\n";
DO SET result :3.14159265359*2:; >> pi does not have a var name yet;
DO SAY result,"\n";
DO SET result :0/12:;
DO SAY result,"\n";
DO SET result :myAge*2:;
DO SAY result,"\n";
DO SET result :myAge*2+1:;
DO SAY result,"\n";
DO SET resultone :2+1:;
DO SET result :myAge*resultone:;
DO SAY result,"\n";
DO SET myAge :myAge+1:;
DO SET result myAge;
DO SAY result,"\n";
END 0;
>> min max functions do not exist yet, however, they can be made;
DEFINE FUNC NUMBER min :first,second:;
    SKIP TO "else" WHEN @first>second@;
        DO RETURN second;
    SKIP LOCATION else;
        DO RETURN first;
ENDFUNC;
DEFINE FUNC NUMBER max :first,second:;
    SKIP TO "else" WHEN @first<second@;
        DO RETURN second;
    SKIP LOCATION else;
        DO RETURN first;
ENDFUNC;